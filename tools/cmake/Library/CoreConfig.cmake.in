################################################################################################################################################################

# @project        Library/Core
# @file           tools/cmake/Library/CoreConfig.cmake.in
# @author         Lucas Br√©mond <lucas@loftorbital.com>
# @license        TBD

################################################################################################################################################################

SET (CPP_PROJECT_TEMPLATE_ROOT_DIR ${CPP_PROJECT_TEMPLATE_ROOT_DIR} @CMAKE_INSTALL_PREFIX@)

FIND_PATH (CPP_PROJECT_TEMPLATE_INCLUDE_DIR "Library/Core/Utilities/Version.hpp" PATHS ${CPP_PROJECT_TEMPLATE_ROOT_DIR} PATH_SUFFIXES "include" NO_DEFAULT_PATH)
FIND_LIBRARY (CPP_PROJECT_TEMPLATE_LIBRARY NAMES "liblibrary-core.so" PATHS ${CPP_PROJECT_TEMPLATE_ROOT_DIR} PATH_SUFFIXES "lib" NO_DEFAULT_PATH)

# MESSAGE (STATUS "CPP_PROJECT_TEMPLATE_ROOT_DIR = ${CPP_PROJECT_TEMPLATE_ROOT_DIR}")
# MESSAGE (STATUS "CPP_PROJECT_TEMPLATE_INCLUDE_DIR = ${CPP_PROJECT_TEMPLATE_INCLUDE_DIR}")
# MESSAGE (STATUS "CPP_PROJECT_TEMPLATE_LIBRARY = ${CPP_PROJECT_TEMPLATE_LIBRARY}")
# MESSAGE (STATUS "CPP_PROJECT_TEMPLATE_FIND_VERSION = ${CPP_PROJECT_TEMPLATE_FIND_VERSION}")

IF (CPP_PROJECT_TEMPLATE_INCLUDE_DIR)

    SET (CPP_PROJECT_TEMPLATE_INCLUDE_DIRS ${CPP_PROJECT_TEMPLATE_INCLUDE_DIR} ${CPP_PROJECT_TEMPLATE_INCLUDE_DIR}/Library/Core)
    SET (CPP_PROJECT_TEMPLATE_LIBRARIES ${CPP_PROJECT_TEMPLATE_LIBRARY})

    SET (CPP_PROJECT_TEMPLATE_FOUND TRUE)

ENDIF ()

################################################################################################################################################################